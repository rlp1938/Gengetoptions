.TH "OPTGEN" 1 "2016-08-02" "Linux Programmer's Manual"


.SH NAME

.P
\fBoptgen\fR \- operates on an xml file to generate options processing for
a C program.

.SH SYNOPSIS

.P
\fBoptgen\fR xmlfilename.
Generates the actual C code to process options in accordance with the
data in xmlfile. The xmlfile should have been generated by \fBgenxml\fR
and subsequently edited to describe the C program options.

.SH DESCRIPTION

.P
\fBoptgen\fR before generating any C code validates the xmlfile and aborts
with an error message for each error found.

.P
There is an xml section for each and every option. The sections begin
with a <name>???</name> pair where the text between tags is just a
documentary entry. This is followed by 'shortname' and 'longname' tag
pairs that contain the short and long option names respectively. Either
name may be zero length but not both. These values have been set at
creation time but the remainder must be input by editing the file before
generating any code.

.P
This is followed by:
<optvariable>

.RS
<vname>???</vname>
<type>???</type>
.RE

.P
<default>

.RS
???
.RE

.P
</default>

.P
</optvariable>

.P
Now this group must be repeated for each and every options variables
that you want to specify. But if there are no options variables needed
then the intermediate tags must be removed. Failure to do that will
cause a validate time error. All input between those tags must be legal
C code including the terminating ';' on the default assignment
statement.

.P
The next tag pair is <code></code>. Insert the C code to execute when
this option is selected. All options variables will be part of an
\fIoptions_t\fR struct named 'opts' so all references to these variables
must be prefixed by 'opts.'

.P
This is followed by <optarg></optarg>. If an options argument is
required '1' must be inserted here. By default the initial value is '0'.

.P
This is then followed by <helptext></helptext>. This text is reformatted
to be 66 chars or less set between __"\et and "\en where __ is 2 spaces.
You may force a line break anywhere you want by inserting '\en' in the
text. An empty line is designated by '\en' on a line alone.

.P
In addition to these tags the initial HELP section has tags labelled
<synopsis></synopsis> and <goptvariable></goptvariable>. The 'synopsis'
tags are used for text which will be output before the text output when
\-\-help is selected. The formatting is the same as for any help text.

.P
The 'goptvariable' tags are to be used for any variables within the
scope of \fIgopt.c\fR that are not part of the \fIoptions_t\fR struct. If
there are none required then the intermediate tags must be removed.

.P
Finally, if your xmlfile is named eg 'my.xml' then there will be a C
program 'my.c'. Also generated is 'makefile.opt'. If all is well with
\&'my.xml' then `make \-f makefile.opt` should build 'my' without error.

.SH OPTIONS

.TP
 \fB\-h, \-\-help\fR
Print help information and exit.

.SH SEE ALSO

.P
\fBgenxml\fR (1) \fBgetopt\fR (3)

.\" man code generated by txt2tags 2.6 (http://txt2tags.org)
.\" cmdline: txt2tags -t man optgen.t2t
